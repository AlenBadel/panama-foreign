    static $type$ [[TEST]]Masked($type$[] a, int idx, boolean[] mask) {
        $type$ res = [[TEST_INIT]];
        for (int i = idx; i < (idx + SPECIES.length()); i++) {
            if(mask[i % SPECIES.length()])
                res [[TEST_OP]]= a[i];
        }

        return res;
    }

    static $type$ [[TEST]]Masked($type$[] a, boolean[] mask) {
        $type$ res = [[TEST_INIT]];
        for (int i = 0; i < a.length; i += SPECIES.length()) {
            $type$ tmp = [[TEST_INIT]];
            for (int j = 0; j < SPECIES.length(); j++) {
                if(mask[(i + j) % SPECIES.length()])
                    tmp [[TEST_OP]]= a[i + j];
            }
            res [[TEST_OP]]= tmp;
        }

        return res;
    }
